ОБОЗНАЧЕНИЯ:
!	Соблюдать
?	Обдумать
+	Добавить/сделать
*	Изменить/исправить
-	Убрать
=	Проверить
d	Реализовано
=====================
COMMON:
!	Попробовать писать сначала пустые интерфейсы классов для задачи, потом тесты, которые естественно не пройдут, и лишь после этого писать реализацию. Т.е. использовать подход в написании кода от архитектуры/интерфейса к реализации (от общего к частному), а не наоборот, как я делал раньше.
!	Находить баланс между краткостью кода и его понятностью. Но понятность важнее!
!	Выбирать, каким я вижу свой API и везде придерживаться такого выбора. Т.е. вместо универсальности везде и во всем следовать одному пути реализации, который мне самому больше импонирует.
!	Четко следить, что я пишу ровно тот код, который мне реально нужен (минимум). Никакого перепроектирования, сплошной универсальности и учета всегь заранее, "про запас". Проблемами оптимизации всеръез заниматься только если решу, что это реально имеет смысл. И оптимизировать только уже написанный код.
!	Не смешивать: 1. Проектирование, 2. Тестирование, 3. Реализацию, 4. Оптимизацию. Нет смысла заниматься оптимизацией раньше, чем я могу проводить интеграционное тестирование.
!	После полной реализации задачи проверять расположение кода и его соответствие объявленным пространствам имен.
!	Если в структуре, которую нужно копировать, нет полей ссылочных типов, то простое присваивание уже будет создавать копию и этого будет достаточно.
=====================
ТЕСТЫ:
!	Тестировать то, что действительно имеет смысл проверить, а не все подряд!
=====================
ROADMAP (вынести в отдельный файл):
+	1. Добавить тесты для сложных объектов.
+	2. Добавить минимум описания/документации для сложных объектов и методов.
=====================
001-MultilayerScreenInterface:
	Нужно написать все необходимое, для многослойного экранного интерфейса:
	Смотреть рисунок MultilayerScreenInterface.png

!+	Текстуры сделать однозначно иммутабельными.
!+	Метод отрисовки Display должен быть внутри экрана Screen и принимать на вход IGraphicObject. Убрать соответствующие методы из пикселя и текстуры.
?+	Есть подозрения, что многослойный интерфейс будет работать весьма небыстро. Тогда, возможно, имеет смысл сделать лишь активный буфер экрана, но убрать слои. Причем оставить оба варината и реализовать возможность выбора.
?	Сделать два вида текстуры: строго прямоугольную и с любым расположением пикселей. Будет ли от этого выигрыш?
?	Осуществлять ли проверку возможности вывода текстуры на экран? В смысле, если какая-то точка выходит за пределы области экрана.

Screen:
	Операции:
