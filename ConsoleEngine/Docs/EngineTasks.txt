ОБОЗНАЧЕНИЯ:
!	Соблюдать
?	Обдумать
+	Добавить/сделать
*	Изменить/исправить
-	Убрать
=	Проверить
D	Реализовано
=====================
ОБЩИЕ ТРЕБОВАНИЯ:
!	Отказаться от идеи идеального кода => код просто должен быть хорошим и решать реальную задачу. Решение задачи - в приоритете!
!	Расположение кода в соответствующих пространствах имен и папках.
!	Архитектура и интерфейсы объектов => Тесты => Реализация.
!	Один путь реализации задачи, вместо универсальности во всем.
!	Писать ровно тот код, который сейчас реально нужен для самого простого/минималистичного решения. Не больше.
!	Баланс между краткостью кода и его понятностью. Понятность в приоритете.
!	Этапы написания кода (в порядке важности):
	1.	Проектирование: сверху вниз, т.е. от общего к частному.
	2.	Тесты (TDD): снизу вверх, т.е. от частного к общему.
	3.	Реализация
	4.	Оптимизация. Если имеет смысл и тогда, когда код уже написан и работает. Потому последняя в очереди.
=====================
ТЕСТЫ:
!	Тестировать то, что действительно нужно, а не все подряд.
=====================
ROADMAP (вынести в отдельный файл):
+	1. Добавить необходимые тесты.
+	2. Добавить минимум документации, где это необходимо.
=====================
ЗАМЕТКИ:
!	Для структур без полей ссылочного типа простое присваивание уже создает копию.
	?	Нужно ли переопределять для таких структур операторы сравнения на равенство/неравенство?
=====================
001-MultilayerScreenInterface:
	Нужно написать все необходимое, для многослойного экранного интерфейса:
	Смотреть рисунок MultilayerScreenInterface.png

+	Метод отрисовки Display должен быть внутри экрана Screen и принимать на вход IGraphicObject.
?	Есть подозрения, что многослойный интерфейс будет работать весьма небыстро. Тогда, возможно, имеет смысл сделать лишь активный буфер экрана без слоев.
